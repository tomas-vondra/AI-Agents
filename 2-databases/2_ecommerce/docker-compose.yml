version: '3.8'

services:
  # Microsoft SQL Server
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ecommerce-mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Heslo_1234"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    volumes:
      - mssql_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Heslo_1234" -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: ecommerce-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: ecommerce-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: ecommerce-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=
      - xpack.security.enabled=false
    volumes:
      - kibana_data:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:5601/api/status || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ecommerce-qdrant
    ports:
      - "6333:6333"   # HTTP API
      - "6334:6334"   # gRPC API
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # MinIO Object Storage
  minio:
    image: quay.io/minio/minio:latest
    container_name: ecommerce-minio
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Console port
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  mssql_data:
    driver: local
  mongodb_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  qdrant_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: ecommerce-network
    driver: bridge